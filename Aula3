package Aula;

public class AulaMain {
	public volatile static int produtos = 0;
	
	public static void main(String[] args) {
		Numero n = new Numero(0);
		Produtor p1 = new Produtor(n);
		Consumidor c1 = new Consumidor(n);
		p1.start();
		c1.start();
	}
}

class Produtor extends Thread {
	Numero numero;

	Produtor(Numero numero){
		this.numero = numero;
	}
	public void run() {
		for(int i = 0; i <= 10; i++) {
			{
				numero.produzir(this.getName(), i);
			}
		}
	}
}

class Consumidor extends Thread {
	Numero numero;
	
	Consumidor(Numero numero){
		this.numero = numero;
	}
	public void run() {
		int valor = 0;
		for(int i = 0; i <= 10; i++) {
			{	
				valor = this.numero.consumir(this.getName());
			}
		}
	}
}


class Numero {	
	private int numero;	
	private boolean disponivel;
	
	Numero(int numero) {
		this.numero = numero;
		this.disponivel = false;
	}
	
	public synchronized int consumir(String idThread) {
		while(this.disponivel == false) {
			try {
				this.wait();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
				
		System.out.println("  Consumidor " + idThread + "\t consumiu: \t" + this.numero);
		this.disponivel = false;
		notifyAll();
		return this.numero;	
	}
	
	public synchronized void produzir(String idThread, int valor) {
		while(this.disponivel == true) {
			try {
				this.wait();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		this.disponivel = true;
		this.numero = valor;	
		notifyAll();
		System.out.println("Produtor " + idThread + "\t produziu: \t" + valor);
		
	}

}
